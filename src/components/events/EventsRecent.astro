---
import { Picture } from 'astro:assets';

// 接收父组件传入的数据
const { initialMonths, eventsByMonth, hasMoreMonths, initialMonthsCount, sortedMonths } = Astro.props;
---

<div id="events-container">
  {
    initialMonths.map((month, monthIndex) => (
      <div class='mb-16 month-section'>
        <h2 class='pl-3 mb-6 text-2xl font-bold text-gray-800 border-l-4 border-blue-500'>
          {month}
        </h2>
        <ul class='space-y-16'>
          {eventsByMonth[month].map((eventEntry, index) => (
            <li class='transition-shadow rounded-lg hover:shadow-lg bg-slate-100 hover:bg-blue-50'>
              <a href={`/events/${eventEntry.slug}`} class='block p-6'>
                <div
                  class={`grid items-center gap-8 ${index % 2 === 0 ? 'md:grid-cols-[1fr_1.5fr]' : 'md:grid-cols-[1.5fr_1fr] md:grid-flow-dense'}`}>
                  <div
                    class={`${index % 2 === 1 ? 'md:col-start-2' : ''}`}>
                    <div class='lazy-image-container flex justify-center items-center rounded-md w-full h-[290px]'>
                      <Picture
                        src={eventEntry.data.image.src}
                        alt={eventEntry.data.image.alt || 'Event image'}
                        class='object-cover object-center w-full h-full rounded-md'
                        loading='lazy'
                        decoding='async'
                        widths={[320, 800]}
                        sizes='(max-width: 768px) 100vw, 50vw'
                        width={800}
                        height={320}
                        inferSize={false}
                        style='aspect-ratio: 5/3; height: 100%; width: 100%;'
                      />
                    </div>
                  </div>

                  <div
                    class={`${index % 2 === 1 ? 'md:col-start-1 text-right' : 'text-left'} px-4`}>
                    <span class='text-sm font-medium tracking-wider text-blue-400 uppercase'>
                      {eventEntry.data.category}
                    </span>
                    <h3 class='mt-2 text-3xl font-semibold leading-snug tracking-tight'>
                      {eventEntry.data.title}
                    </h3>
                    <p class='mt-4 text-gray-600 line-clamp-3'>
                      {eventEntry.data.excerpt || ''}
                    </p>
                    <div class={`flex gap-2 mt-4 ${index % 2 === 1 ? 'justify-end' : 'justify-start'}`}>
                      <span class='text-gray-400'>
                        {eventEntry.data.author}
                      </span>
                      <span class='text-gray-400'>•</span>
                      <time
                        class='text-gray-400'
                        datetime={eventEntry.data.publishDate.toISOString()}>
                        {eventEntry.data.publishDate.toLocaleDateString(
                          'zh-CN',
                          {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric',
                          },
                        )}
                      </time>
                    </div>
                  </div>
                </div>
              </a>
            </li>
          ))}
        </ul>
      </div>
    ))
  }
</div>

<!-- 加载更多按钮 -->
{hasMoreMonths && (
  <div id='load-more-container' class='mt-8 mb-16 text-center'>
    <button
      id='load-more'
      class='px-6 py-3 text-white transition-colors bg-blue-500 rounded-md hover:bg-blue-600'
      data-current-index={initialMonthsCount}>
      加载更多活动讯息
    </button>
  </div>
)}

<script define:vars={{ sortedMonths, eventsByMonth }}>
  document.addEventListener('DOMContentLoaded', () => {
    // 图片懒加载实现
    const setupIntersectionObserver = () => {
      const imageContainers = document.querySelectorAll('.lazy-image-container');

      const imageObserver = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const container = entry.target;
            const image = container.querySelector('img');

            if (image && image.dataset.src) {
              image.src = image.dataset.src;
              image.removeAttribute('data-src');
            }

            // 停止观察已加载的图片
            observer.unobserve(container);
          }
        });
      }, {
        rootMargin: '50px 0px',
        threshold: 0.1
      });

      imageContainers.forEach(container => {
        imageObserver.observe(container);
      });
    }

    // 初始化图片懒加载
    setupIntersectionObserver();

    // 活动讯息加载更多功能
    const loadMoreBtn = document.getElementById('load-more');
    if (loadMoreBtn) {
      loadMoreBtn.addEventListener('click', () => {
        const eventsContainer = document.getElementById('events-container');
        const currentIndex = parseInt(loadMoreBtn.getAttribute('data-current-index') || '3');
        const batchSize = 3; // 每次加载3个月份

        // 加载下一批月份
        for (let i = 0; i < batchSize; i++) {
          const monthIndex = currentIndex + i;
          if (monthIndex < sortedMonths.length) {
            const monthToLoad = sortedMonths[monthIndex];

            if (monthToLoad && eventsByMonth[monthToLoad]) {
              // 创建新的月份区域
              const monthSection = document.createElement('div');
              monthSection.classList.add('mb-16', 'month-section');

              // 添加月份标题
              const monthTitle = document.createElement('h2');
              monthTitle.classList.add('pl-3', 'mb-6', 'text-2xl', 'font-bold', 'text-gray-800', 'border-l-4', 'border-blue-500');
              monthTitle.textContent = monthToLoad;
              monthSection.appendChild(monthTitle);

              // 添加活动列表
              const eventsList = document.createElement('ul');
              eventsList.classList.add('space-y-16');

              // 使用模板字符串构建HTML内容
              eventsList.innerHTML = eventsByMonth[monthToLoad].map((event, index) => `
                <li class='transition-shadow rounded-lg hover:shadow-lg bg-slate-100 hover:bg-blue-50'>
                  <a href="/events/${event.slug}" class='block p-6'>
                    <div class='grid items-center gap-8 ${index % 2 === 0 ? 'md:grid-cols-[1fr_1.5fr]' : 'md:grid-cols-[1.5fr_1fr] md:grid-flow-dense'}'>
                      <div class='${index % 2 === 1 ? 'md:col-start-2' : ''}'>
                        <div class='lazy-image-container flex justify-center items-center rounded-md w-full h-[290px]'>
                          <img
                            src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'%3E%3C/svg%3E"
                            data-src="${event.data.image.src.src || event.data.image.src}"
                            alt="${event.data.image.alt || 'Event image'}"
                            class='object-cover object-center w-full h-full rounded-md'
                            style='aspect-ratio: 5/3; height: 100%; width: 100%;'
                            loading="lazy"
                          />
                        </div>
                      </div>
                      <div class='${index % 2 === 1 ? 'md:col-start-1 text-right' : 'text-left'} px-4'>
                        <span class='text-sm font-medium tracking-wider text-blue-400 uppercase'>
                          ${event.data.category}
                        </span>
                        <h3 class='mt-2 text-3xl font-semibold leading-snug tracking-tight'>
                          ${event.data.title}
                        </h3>
                        <p class='mt-4 text-gray-600 line-clamp-3'>
                          ${event.data.excerpt || ''}
                        </p>
                        <div class='flex gap-2 mt-4 ${index % 2 === 1 ? 'justify-end' : 'justify-start'}'>
                          <span class='text-gray-400'>
                            ${event.data.author}
                          </span>
                          <span class='text-gray-400'>•</span>
                          <time
                            class='text-gray-400'
                            datetime="${new Date(event.data.publishDate).toISOString()}">
                            ${new Date(event.data.publishDate).toLocaleDateString('zh-CN', {
                              year: 'numeric',
                              month: 'long',
                              day: 'numeric',
                            })}
                          </time>
                        </div>
                      </div>
                    </div>
                  </a>
                </li>
              `).join('');

              monthSection.appendChild(eventsList);
              eventsContainer.appendChild(monthSection);
            }
          }
        }

        // 更新当前索引
        const newIndex = currentIndex + batchSize;
        loadMoreBtn.setAttribute('data-current-index', newIndex.toString());

        // 如果已加载所有月份，隐藏按钮
        if (newIndex >= sortedMonths.length) {
          loadMoreBtn.style.display = 'none';
        }

        // 为新加载的图片设置懒加载
        setupIntersectionObserver();
      });
    }
  });
</script>
