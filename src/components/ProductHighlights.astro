---
/**
 * @fileoverview 产品精选组件 - 展示咖啡豆产品
 */

import Coffee from 'assets/icon/Coffee.webp'
import { Image } from 'astro:assets'
import goods from 'content/goods.json'
import ProductCard from '@components/products/ProductCard.astro'

// 定义咖啡豆类别
const coffeeCategory = {
  id: 'coffee',
  title: '咖啡豆',
  subtitle: 'Coffee',
  icon: Coffee,
  link: '/products', // 修改为使用新的路径结构
  types: ['亚洲', '非洲', '美洲'],
}

// 获取所有咖啡产品（不限数量）并过滤掉重复标题的产品
const getCoffeeProducts = () => {
  // 筛选指定类型的商品
  const typeFilteredProducts = goods.filter(product =>
    coffeeCategory.types.includes(product.type) &&
    product.title &&
    product.images &&
    product.images.length > 0
  );

  // 使用 Map 过滤掉重复标题的产品
  const uniqueTitlesMap = new Map();
  typeFilteredProducts.forEach(product => {
    if (!uniqueTitlesMap.has(product.title)) {
      uniqueTitlesMap.set(product.title, product);
    }
  });

  // 将过滤后的产品按 displayTime 排序（新品在前）
  const uniqueProducts = Array.from(uniqueTitlesMap.values())
    .sort((a, b) => new Date(b.displayTime).getTime() - new Date(a.displayTime).getTime());

  return uniqueProducts;
}

// 获取所有咖啡产品
const coffeeProducts = getCoffeeProducts();
---

<section class='w-full py-20 bg-blue-50'>  <!-- 修改背景色为淡蓝色 -->
  <div class='px-6 mx-auto max-w-[1600px]'>
    <div class='flex items-center justify-between mb-10'>
      <h2 class='text-3xl font-bold'>精选产品</h2>  <!-- 修改标题颜色 -->
      <a
        href={coffeeCategory.link}
        class='px-4 py-2 text-sm font-medium text-white transition-colors rounded-md bg-primary hover:bg-blue-600'>
        查看全部
      </a>
    </div>

    <!-- 水平滚动产品展示 -->
    <div class='relative'>
      <div class='pb-6 overflow-x-auto hide-scrollbar'>
        <div class='flex space-x-6 min-w-max'>
          {coffeeProducts.map(product => (
            <div class='relative flex-shrink-0 w-[280px]'>
              {/* 类型标签 */}
              <div class='absolute top-0 right-0 z-10 px-3 py-1.5 text-xs font-medium text-white bg-primary rounded-br'>
                {product.type}
              </div>

              {/* 直接使用 ProductCard 并包装在 compact-card 中 */}
              <div class="compact-card">
                <ProductCard
                  title={product.title}
                  subTitle={product.subTitle}
                  price={product.price}
                  imageUrl={product.images}
                  productUrl={product.url}
                  isSoldOut={product.isSoldOut}
                />
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>

    {/* 无产品时显示 */}
    {coffeeProducts.length === 0 && (
      <div class="py-16 text-center">
        <p class="text-gray-600">暂无精选产品</p>
      </div>
    )}
  </div>
</section>

<style>
  /* 隐藏滚动条但保持可滚动性 */
  .hide-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  .hide-scrollbar::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }

  /* 紧凑型卡片样式 - 进一步优化高度 */
  .compact-card :global(.aspect-square) {
    /* aspect-ratio: 16/9; 更扁平的图片比例 */
    /* max-height: 150px; 限制最大高度 */
  }

  .compact-card :global(h3) {
    font-size: 0.9rem; /* 更小的标题字体 */
    line-height: 1.2; /* 减小行高 */
    margin-bottom: 0.3rem; /* 减小下边距 */
    line-clamp: 1; /* 只显示一行 */
    -webkit-line-clamp: 1;
  }

  .compact-card :global(p) {
    font-size: 0.8rem; /* 更小的副标题字体 */
    line-height: 1.2; /* 减小行高 */
    margin-top: 0.3rem; /* 减小上边距 */
    margin-bottom: 0.3rem; /* 减小下边距 */
  }

  .compact-card :global(.p-4),
  .compact-card :global(.md\:p-5) {
    padding: 0.6rem; /* 进一步减小内边距 */
  }

  .compact-card :global(.mt-3),
  .compact-card :global(.md\:mt-4) {
    margin-top: 0.5rem; /* 减小底部元素间距 */
  }

  /* 缩小按钮尺寸和改进悬停效果 */
  .compact-card :global(a[target="_blank"]) {
    padding: 0.25rem 0.75rem; /* 更小的按钮 */
    font-size: 0.75rem; /* 更小的按钮文字 */
  }

  /* 添加卡片整体悬停效果 */
  .compact-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .compact-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px -5px rgba(57, 134, 226, 0.3), 0 8px 10px -6px rgba(57, 134, 226, 0.2);
  }

  /* 添加主色调边框过渡效果 */
  .compact-card :global(.border-primary) {
    border-color: #3986E2;
  }
</style>
